{% if not noExtend %}
	app.controller('{{ identifier }}CtrlExtends', function($interval, $location, $compile, $timeout, $sce, $scope, $filter, $window, $rootScope, $routeParams, $http, 
		{{ ident }}Store) {

		// hook sur modalSave pour afficher la fiche crée
		var currentUrl = $window.location.href;
		$scope.{{ ident }}callbakSave = function(data) {
			var url = currentUrl + '/' + data.id;					
			$window.location.href = url;					
		}
		$scope.{{ ident }}saveExt  = $scope.{{ ident }}modalSave;
		$scope.{{ ident }}modalSave = function() {
			$scope.{{ ident }}saveExt($scope.{{ ident }}callbakSave);
		}
		
		// efface le contenu du filtre
		$scope.clearFilter = function() {
			$scope.{{ ident }}.filter = '';
			$('#search{{ ident }}').focus();
		}
	});


	
	app.controller('{{ identifier }}FicheCtrlExtends', function($interval, $location, $compile, $timeout, $sce, $scope, $filter, $window, $rootScope, $routeParams, $http, 
		CadrefInscriptionStore, CadrefClasseStore, CadrefAdherentStore, CadrefEnseignantStore) {

		var getObj = $interval(function(){
            if($scope.obj){
                $interval.cancel(getObj);
				{% if objecttype == 'Adherent' %}$scope.checkCertificat();{% endif %}
				{% if objecttype == 'Section' %}$scope.sectionInfo();{% endif %}
				{% if objecttype == 'Discipline' %}$scope.disciplineInfo();{% endif %}
				{% if objecttype == 'Niveau' %}$scope.niveauInfo();{% endif %}
				{% if objecttype == 'Classe' %}$scope.classeInfo();{% endif %}
            }
        },100,50);

		
		// efface le contenu du filtre
		$scope.clearFilter = function(child) {
			$scope[child].filter = '';
			$('#search'+child).focus();
		}

		$scope.optionsList = [
  {id: 1,  label : "Javaxxxxxxxx xxxxxxxxxx"},
  {id: 2,  label : "C xxxxxxxxxxx xxxxxxxxxxxx xxxxxxxx"},
  {id: 3,  label : "C++ xxxxxxxxxxx xx " },
  {id: 27,  label : "AngularJs"},
  {id: 5,  label : "JavaScript"}
];
				
		// appel de function kobeye avec retour objet
		$scope.{{ identifier }}callMethod = function(obj, name, args, explodeArgs) {
			if (args == undefined) args = [];
			if (explodeArgs == undefined) explodeArgs = true;
				
			var {{ identifier }}method = {
				name: name,
				query: '{{ module }}/{{ objecttype }}/'+obj.id,
				args : args,
				explodeArgs:explodeArgs,
				tms : Date.now(),
			};
			return $http.post('/{{ url }}/'+obj.id+'/Method.json',{"Func":JSON.stringify({{ identifier }}method)});
		}

		
		{% if objecttype == 'Adherent' %}
		// controleur de store
        CadrefClasseStore.cloneContext('default','temp');
		CadrefClasseStore.setPageLength(10);
		CadrefClasseStore.setFilters('Annee={{ Annee }}', 'temp');
		CadrefClasseStore.getData(1, 'temp');
        $scope.CadrefClasse = {
            data: CadrefClasseStore.data.temp,
            store: CadrefClasseStore,
            filter: CadrefClasseStore.getFilters('temp',true).global,
            filterPanel: false,
            filters: (function(){
                var opts = CadrefClasseStore.getFilters('temp',true).options;
                var out = {};
                for (var o in opts){
                    out[opts[o].name] = opts[o];
                }
                return out;
            })(),
            filterQuery: CadrefClasseStore.getQueryFilter('temp'),
            currentPage: CadrefClasseStore.currentPage.temp,
            pageLength: CadrefClasseStore.getPageLength(),
            itemsPerPage: CadrefClasseStore.itemsPerPage,
            selected: {
                selectall: false
            }
        }
		
		// recherche sur le store
        var lasttimeout = false;
		var noEvent = false;
        $scope.$watch('CadrefClasse.filter', function() {
			if(noEvent) return;
			noEvent = true;
			
            if (lasttimeout){
                $timeout.cancel(lasttimeout);
                lasttimeout = false;
            }
            lasttimeout = $timeout(function () {
	            CadrefClasseStore.setFilters('CodeClasse~'+$scope.CadrefClasse.filter+'%&Annee={{ Annee }}','temp');
                CadrefClasseStore.getData(1,'temp');
            },400);
			noEvent = false;
        });

		// save fiche 
		$scope.saveFicheCadref = function() {
            $scope.modalObj = $scope.obj;
			$scope.modalSave();
		}
		

		// regularisation
		$scope.regularisation = function() {
			var o = $scope.obj;
			var s = Number(o.Cotisation) + Number(o.Cours) - Number(o.Reglement) - Number(o.Differe) - Number(o.Regularisation);
			o.Solde = s;
		}
		
		$scope.refreshAdherent = function() {
			console.log("refreshAdherent");
			CadrefAdherentStore.getOneData($scope.obj.id,'fiche',true).then(function (data) {
				console.log('{{ identifier }} >> Fiche >> receive obj definition',data);
				$scope.obj = data;
			});
		}
		
		$scope.checkCertificat = function() {
			var ajax = $scope.{{ identifier }}callMethod($scope.obj,'CheckCertificat');
			ajax.success(
				function(data) {
					console.log('store > {{ module }}/{{ objecttype }} > Method  ', data);
					$scope.obj.certifInvalide = ! data.data;
				}
			).error(
				function() {
					console.error('error > {{ module }}/{{ objecttype }} > Method  ');
				}
			);
		}
		
		$scope.carteAdherent = function(pdf) {
			$window.open(pdf,'_blank');
			return false;
		}
		$scope.displayCard = function() {
			$timeout(function(){
				angular.element($('#displayCard')).triggerHandler('click');
			},0);
		}
		
		//---------------------------------------
		// INSCRIPTIONS
		//---------------------------------------
		
		// ouverture popup inscription
		$scope.addDisabled = true;
		$scope.nextDisabled = false;
		$scope.CadrefClasse.Inscr = {};
		$scope.CadrefClasse.Inscr.updated = false;

        $scope.openInscription = function(obj) {
			$scope.modalObj = {};
            angular.copy(obj, $scope.modalObj);
            CadrefInscriptionStore.cloneContext('children','temp');
	 		CadrefInscriptionStore.setFilters('Annee={{ Annee }}', 'temp');
			CadrefInscriptionStore.getData(1, 'temp');
			$scope.{{ ident }}callFunction(obj,'EditInscriptions','Inscriptions','');
			var cad = $scope.CadrefClasse;
			cad.filter = '';
			cad.Inscr.paye = -parseInt(cad.Inscr.solde);
			$('#searchClasse').focus();
        }
		
		// efface le contenu du filtre
		$scope.clearSearch = function() {
			$scope.CadrefClasse.filter = '';
			$('#searchClasse').focus();
		}
		
		// controle le bontoun ajouter
		$scope.classeControle = function() {
			var enb = false;
			var s = $scope.CadrefClasse.filter;
			if(s.length == 11) {
				enb = true;
				var t = $scope.CadrefInscription.store.data.temp;
				var l = t.length;
				for(var i = 0; i < l; i++) {
					if(t[i].CodeClasse == s) {
						enb = false;
						break;
					}
				}
			}
			$scope.addDisabled = !enb;
		}
		
		// controle le bontoun next
		$scope.nextControle = function() {
			var enb = false;
			var cad = $scope.CadrefClasse.Inscr;
			var p = parseInt(cad.paye)
			enb = p == 0 || cad.paye == '' || (p > 0 && cad.mode != ''); 
			$scope.nextDisabled = !enb;
			console.log('nextControle', p, cad.mode, enb);
		}
		
		// mode = true : ajoute
		// mode = false : retire
		$scope.classeCalcul = function(item, mode) {
			var cad = $scope.CadrefClasse.Inscr;
			var p = Number(item.Prix)-Number(item.Reduction1)-Number(item.Reduction2);
			if(mode) {
				cad.cours = Number(cad.cours)+p;
				cad.solde = Number(cad.solde)+p;
			}
			else {
				cad.cours = Number(cad.cours)-p;
				cad.solde = Number(cad.solde)-p;
			}
			cad.paye = Number(cad.solde);
			$scope.nextControle();
		}
		
		// reduction sur la date
		$scope.classeReduction = function(obj) {
			var now = $filter('date')(new Date(), "yyyyMMdd");
			
			if(obj.CDateReduction1 != '') {
				var a = obj.CDateReduction1.split('/');
				var d = a[2]+a[1]+a[0];
				if(now > d) obj.Reduction1 = obj.CReduction1;
			}
			else obj.Reduction1 = 0;

			if(obj.CDateReduction2 != '') {
				a = obj.CDateReduction2.split('/');
				d = a[2]+a[1]+a[0];
				if(now > d) obj.Reduction1 = obj.CReduction1;
			}
			else obj.Reduction2 = 0;
		}
				
		// ajoute une classe
		$scope.classeAjoute = function(item) {
			var c = item == null ? $scope.CadrefClasse.data[0] : item;
			
			// controle si existe deja
			var s = c.CodeClasse;
			var t = $scope.CadrefInscription.store.data.temp;
			var l = t.length;
			for(var i = 0; i < l; i++) {
				if(t[i].CodeClasse == s) {
					alert('Cours déjà sélectionné');
					return;
				}
			}

			var o = {};
			o.id = 0;
			o.ClasseId = c.id;
			o.CodeClasse = c.CodeClasse;
			o.LibelleD = c.LibelleD;
			o.LibelleN = c.LibelleN;
			o.Jour = c.Jour;
			o.HeureDebut = c.HeureDebut;
			o.HeureFin = c.HeureFin;
			o.CycleDebut = c.CycleDebut;
			o.CycleFin = c.CycleFin;
			o.Places = c.Places;
			o.Inscrits = c.Inscrits;
			o.Attentes = c.Attentes;
			o.Attente = 0;
			o.DateAttente = '';
			o.Supprime = 0;
			o.DateSupprime = null;
			o.Utilisateur = '';
			o.DateInscription = $filter('date')(new Date(), "dd/MM/yyyy");
			o.Prix = c.Prix;
			o.CReduction1 = c.Reduction1;
			o.CReduction2 = c.Reduction2;
			o.CDateReduction1 = c.DateReduction1;
			o.CDateReduction2 = c.DateReduction2;
			$scope.classeReduction(o);
			o.updated = 1;
			var t = $scope.CadrefInscription.store.data.temp;
			t[t.length] = o;
			$scope.CadrefClasse.filter = '';
			$scope.addDisabled = true;
						
			$scope.classeCalcul(o, true);
			$scope.CadrefClasse.Inscr.updated = true;
		}
		
	
		// mode = 1 : supprime
		// mode = 2 : attente
		$scope.classeSupprime = function(item, mode) {
			console.log('supprime',item);
			if(item.Supprime > 0) return;
			
			if(item.Attente == 0) $scope.classeCalcul(item, false);
			
			// insciption non enregistrée : suppression de la liste
			if(item.id == 0) {
				var t = $scope.CadrefInscription.store.data.temp;
				var l = t.length;
				var s = item.CodeClasse;
				for(var i = 0; i < l; i++) {
					if(t[i].CodeClasse == s) {
						t.splice(i, 1);
						break;
					}
				}
				return;
			}
			// flag supperssion
			var dt = new Date();
			item.DateSupprime = $filter('date')(new Date(), "dd/MM/yyyy");
			item.Supprime = mode;
			item.updated = 1;
			$scope.CadrefClasse.Inscr.updated = true;
		}

		$scope.classeInscrire = function(item) {
			console.log('inscrire',item);
			if(item.Supprime == 0 && item.Attente == 0) return;
			item.Supprime = 0;
			item.Attente = 0;
			item.DateSupprime = '';
			item.DateAttente = '';
			item.DateInscription = $filter('date')(new Date(), "dd/MM/yyyy");
			item.updated = 1
			$scope.classeReduction(item);
			$scope.classeCalcul(item, true);
			$scope.CadrefClasse.Inscr.updated = true;
		}
		
		$scope.classeAttente = function(item) {
			console.log('attente',item);
			if(item.Supprime > 0 || item.Attente > 1) return;
			item.Attente = 1;
			item.DateAttente = $filter('date')(new Date(), "dd/MM/yyyy hh:mm:ss");
			item.DateInscription = '';
			item.updated = 1
			$scope.classeCalcul(item, false);
			$scope.CadrefClasse.Inscr.updated = true;
		}
		
		//---------------------------------------
		// DIFFERE
		//---------------------------------------	
		$scope.diffPaye = function(lig) {
			var reg = $scope.CadrefClasse.Diff.regl;
			var r = reg[lig];
			if(Number(r.paye) != 0) {
				if(r.mois == '' && r.user == '') {
					if(lig == 0) r.mois = $filter('date')(new Date(), "MM");
					else {
						var n = parseInt(lig)-1;
						r.mode = reg[n].mode;
						r.mois = parseInt(reg[n].mois)+1;
						if(r.mois == 13) r.mois = 1;
					}
				}
			}
			else if(r.user == '') {
				r.mode = '';
				r.mois = '';
			}
			r.updated = true;
			
			var p = 0;
			for(var i = 0; i < 12; i++) {
				if(!reg[i].encais) p += Number(reg[i].paye);
			}
			var o = $scope.obj;
			var s = Number(o.Cotisation) + Number(o.Cours) - Number(o.Reglement) - Number(o.Regularisation);
			$scope.CadrefClasse.Diff.solde = s-p;
		}
		{% endif %}
		
		
		{% if objecttype == 'Enseignant' %}		
		//--------------------------------------
		// ENSEIGNANT
		//--------------------------------------
		$scopeAbsenceModifie = function(item) {
			return true;
		}

		$scopeAbsenceSupprime = function(item) {
			return true;
		}
		{% endif %}

		
		{% if objecttype == 'Section' %}
		//--------------------------------------
		// DISCIPLINE
		//--------------------------------------		
		$scope.sectionInfo = function() {
			$scope.obj.LibelleS = $scope.obj.Libelle;
		}
		{% endif %}
		
		
		{% if objecttype == 'Discipline' %}
		//--------------------------------------
		// DISCIPLINE
		//--------------------------------------		
		$scope.disciplineInfo = function() {
			$scope.obj.LibelleD = $scope.obj.Libelle;
			var ajax = $scope.{{ identifier }}callMethod($scope.obj,'GetFormInfo');
			ajax.success(
				function(data) {
					$scope.obj.LibelleS = data.data.LibelleS;
				}
			).error(
				function() {
					console.error('error > {{ module }}/{{ objecttype }} > Method  ');
				}
			);
		}
		{% endif %}
		
		
		{% if objecttype == 'Niveau' %}
		//--------------------------------------
		// NIVEAU
		//--------------------------------------		
		$scope.niveauInfo = function() {
			$scope.obj.LibelleN = $scope.obj.Libelle;
			var ajax = $scope.{{ identifier }}callMethod($scope.obj,'GetFormInfo');
			ajax.success(
				function(data) {
					$scope.obj.LibelleA = data.data.LibelleA;
					$scope.obj.LibelleS = data.data.LibelleS;
					$scope.obj.LibelleD = data.data.LibelleD;
				}
			).error(
				function() {
					console.error('error > {{ module }}/{{ objecttype }} > Method  ');
				}
			);
		}
		{% endif %}
		
		
		{% if objecttype == 'Classe' %}
		//--------------------------------------
		// CLASSE
		//--------------------------------------		
		$scope.classeInfo = function() {
			var ajax = $scope.{{ identifier }}callMethod($scope.obj,'GetFormInfo');
			ajax.success(
				function(data) {
					$scope.obj.LibelleA = data.data.LibelleA;
					$scope.obj.LibelleS = data.data.LibelleS;
					$scope.obj.LibelleD = data.data.LibelleD;
					$scope.obj.LibelleN = data.data.LibelleN;
				}
			).error(
				function() {
					console.error('error > {{ module }}/{{ objecttype }} > Method  ');
				}
			);
		}
		{% endif %}
		
    });
    

{% endif %}