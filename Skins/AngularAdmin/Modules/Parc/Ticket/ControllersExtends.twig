app.controller('{{ identifier }}FicheCtrlExtends', function($interval, $timeout,$location, $compile, $sce, $scope, $rootScope, $routeParams,$http,ParcActionStore, ParcTechnicienStore, SystemeUserStore, ParcTicketStore) {

    $scope.getSide = function(item){
        if ( item.UserCrea == 'ZZ' ) return 'leftSide';

        return 'rightSide';
    }

    $scope.ParcTicketStore = ParcTicketStore;
    $scope.ParcTechnicienStore = ParcTechnicienStore;
    $scope.SystemeUserStore = SystemeUserStore;

    $scope.editable = function(item){
        item.customized = true;
        if(item.creator == {{ uid }}) item.Editable = true;

        item.Auteur ='';
        if(item.UserCrea == 'ZZ' ) {
            item.Auteur = $scope.ParcTicketStore.data['fiche'][0].ClientClientIdlabel;
        }
        if(item.UserCrea != 'ZZ' && item.UserCrea != '' && item.UserCrea != undefined && item.UserCrea != null) {
            $scope.ParcTechnicienStore.initContext('timeline');
            $scope.ParcTechnicienStore.setFilters('IdGestion='+item.UserCrea,'timeline');
            $scope.ParcTechnicienStore.getData(1,'timeline').then(function(){
                if($scope.ParcTechnicienStore.data['timeline'].length > 0){
                    item.Auteur = $scope.ParcTechnicienStore.data['timeline'][0].Nom+' '+$scope.ParcTechnicienStore.data['timeline'][0].Prenom;
                }
            });
        }
        if(item.Auteur == '') item.Auteur = 'Abtel';

        item = $scope.updateDateDebut(item);
        return item;
    }

    // MAj de l'heure de début un poil bourrin à affiner.
    $rootScope.$on('ParcActionStore',function (ev,data){
        for(var n = 0; n < ParcActionStore.data.children.length;n++ ){
            ParcActionStore.data.children[n] = $scope.updateDateDebut(ParcActionStore.data.children[n]);
            $scope.ParcAction.data = ParcActionStore.data.children;
        }
    });


    $scope.updateDateDebut = function(item){
        var date = new Date;
        var temp = item.DateCrea.split('/');
        date.setFullYear(temp[2],temp[1],temp[0]);
        temp = item.HeureDebut.split(':');
        date.setHours(temp[0]);
        date.setMinutes(temp[1]);
        date.setSeconds(temp[2]);
        date.setMilliseconds(0);
        var ts = date.toLocaleString("fr-FR",{timeZone:"Europe/Paris"});
        item.sort = date.getTime();

        item.DateDebut = ts;

        return item;
    }

    $scope.ParcActionmodalSaveBis = function(itm){
        $scope.modalObj.UserCrea = '{{ initiales }}';
        $scope.modalObj.TicketTicketId = itm;
        if($scope.modalObj.pj != undefined && $scope.modalObj.pj != '')
            $scope.modalObj.pj = {'force':true,'pj':$scope.modalObj.pj}
        $scope.ParcActionmodalSave(true);
    }

    {#$scope.attachListener = function(){
        $('.unfold').off('click');
        $('.unfold').on('click',function(e){
            e.stopPropagation();
            e.preventDefault();
            var target = $(this).closest('.row').siblings('.fold');
            target.toggleClass('open');
        });
    };#}

    $scope.checkFile = function(item){
        var url = item;
        var splat = url.split('.');
        var ext = splat[splat.length-1];
        var images = ['jpg','jpeg','png','gif','JPG','JPEG','PNG','GIF'];
        if(images.indexOf(ext) != -1){
            return '<div class="uploadItemThumb"> \
                        <img src="'+url+'.limit.500x500.'+ext+'"> \
                    </div> \
                    <div class="uploadItemLink"> \
                        <a href="'+url+'" target="_blank" title="Voir l\'image">Voir l\'image</a> \
                    </div>';
        } else {
            return '<div class="uploadItemThumb"> \
                        <i class="icmn-file-empty2"></i> \
                    </div> \
                    <div class="uploadItemLink"> \
                        <a href="'+url+'" target="_blank" title="Voir l\'image">Voir le fichier</a> \
                    </div>';
        }
    }

    $scope.getService = function(){
        var serv = 'Autre';

        if($scope.obj == undefined) return serv;

        switch($scope.obj.Titre){
            case 'Demande client Commerciale':
                    serv = 'Commercial';
                break;
            case 'Demande client Administrative':
                    serv = 'Admisitratif';
                break;
            case 'Demande client Téléphonie':
                    serv = 'Telephonie';
                break;
            case 'Demande client Poste':
                    serv = 'Poste';
                break;
            case 'Demande client Serveur':
                    serv = 'Serveur';
                break;
            case 'Demande client Web':
                    serv = 'Web';
                break;
        }

        return serv;
    }

    $scope.ParcActionFakedelete = function(item){
        console.log('fakedel');
        item.Masque = false;
        ParcActionStore.saveData(item);
    }

});
